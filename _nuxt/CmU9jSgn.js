import{a6 as S,q as l,r as d,a3 as C}from"./DSfHGzKa.js";import{r as h}from"./CHR8PpuI.js";import{a as j}from"./DrYNWdd4.js";const k=S("finCert",()=>{const c=l().public.memberApiUrl,e=d("");return{login:async r=>{let t="";try{const s=await $fetch(`${c}/cert/finCertficate`,{method:"POST",body:r,headers:{"Content-Type":"application/json"},credentials:"include"});return s.success?s:(t=s.message||"로그인 실패",{success:!1,message:t,failPoint:s.failPoint})}catch{return t="서버와 통신 중 문제가 발생했습니다.",{success:!1,message:t,failPoint:""}}},authFinPswd:async r=>{try{const t=l().public.userApiUrl,s=await fetch(`${t}/nlogin/modifyPswdCert`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(r)});if(!s.ok)throw new Error("비밀번호 변경에 실패했습니다.");const n=await s.json();return e.value="",n.state==="false"?n.message:null}catch(t){return t instanceof Error?e.value="비밀번호 변경에 실패했습니다.":e.value="알 수 없는 오류가 발생했습니다.","비밀번호 변경에 실패했습니다."}},callGenNonce:async()=>{try{const r=await fetch(`${c}/cert/genNonce`,{method:"POST"});if(!r.ok)throw new Error(`서버 에러! status=${r.status}`);return r.text()}catch{return alert("Nonce 호출 중 오류가 발생했습니다."),"error"}},authFinVidCheck:async r=>{try{const t=await fetch(`${c}/cert/finVidVal`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(r)});if(!t.ok)throw new Error("인증에 실패했습니다.");const s=await t.json();return e.value="",{state:s.state,message:s.message,userDn:s.userDn}}catch(t){return t instanceof Error,e.value="인증에 실패했습니다.",{state:"fail",message:"인증에 실패했습니다.",userDn:""}}},certInputDataCheck:async r=>{try{const t=C("2",JSON.stringify(r)),s=await fetch(`${c}/cert/certInputData`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:t});if(!s.ok)throw new Error("인증서 조회 중 오류가 발생하였습니다.");const n=await s.json();return e.value="",{state:n.state,message:n.message,userDn:n.userDn,getNotBefore:n.getNotBefore,getNotAfter:n.getNotAfter,subjectOU:n.subjectOU}}catch(t){return t instanceof Error?e.value="인증서 조회 중 오류가 발생하였습니다.":e.value="알 수 없는 오류가 발생했습니다.",{state:"fail",message:e.value,userDn:"",getNotBefore:"",getNotAfter:"",subjectOU:""}}}}}),_=S("jointCert",()=>{const c=l().public.memberApiUrl,e=l().public.buildTime,g=d(""),u=["/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/js/xkeypad_config.js?time="+e,"/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/js/xkeypad_plugin.js?time="+e,"/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/js/xkeypad_desktop.js?time="+e,"/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/js/xkeypad_html5.js?time="+e,"/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/js/xkeypad_html5_pin.js?time="+e,"/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/js/xkeypad_mobile.js?time="+e,"/AnySign/anySign4PCInterface.js?time="+e,"/AnySign/interface/commSign4PCInterface.js?time="+e,"/AnySign/interface/anySignOld4PCInterface.js?time="+e,"/AnySign/AnySign4PC/ext/crossStorageClient.min.js?time="+e,"/AnySign/AnySign4PC/ext/xcryptoCore_min.js?time="+e,"/AnySign/AnySign4PC/ext/xcrypto_min.js?time="+e,"/AnySign/AnySign4PC/ext/FileSaver.min.js?time="+e,"/AnySign/AnySign4PC/ext/integrity_min.js?time="+e,"/AnySign/AnySign4PC/ext/ClassList.js?time="+e,"/AnySign/MWebASL/js/jquery-3.3.1.min.js?time="+e],p=async()=>{await h(u),o("/AnySign/AnySign4PC/css/common.css?time="+e),o("/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/css/xkp_html5.css?time="+e),o("/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/css/xkp_html5_pin.css?time="+e),o("/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/css/xkp_mobile.css?time="+e),o("/AnySign/XecureCertShare_1.1.0.8/XecureKeypad/css/xkp_plugin.css?time="+e),await j(u)},f=async()=>{await h(u)},o=n=>{const a=document.createElement("link");a.setAttribute("rel","stylesheet"),a.setAttribute("id","anySignCSS"),a.setAttribute("type","text/css"),a.setAttribute("href",n),document.body.appendChild(a)},r=d("");return{init:p,login:async n=>{let a="";try{const i=await $fetch(`${c}/cert/certCertficate`,{method:"POST",body:n,headers:{"Content-Type":"application/json"},credentials:"include"});return i.success?i:(a=i.message||"로그인 실패",{success:!1,message:a,failPoint:i.failPoint})}catch{return a="서버와 통신 중 문제가 발생했습니다.",{success:!1,message:a,failPoint:""}}},authCertCheck:async n=>{try{const a=C("2",JSON.stringify(n)),i=await fetch(`${c}/cert/certCertficateCheck`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:a});if(!i.ok){let m="";try{m=(await i.json()).message||"오류가 발생했습니다."}catch{m="서버에서 오류 메시지를 받지 못했습니다."}throw new Error(m)}g.value="";const y=await i.json();return r.value="",{state:y.state,message:y.message,userDn:y.userDn}}catch(a){return a instanceof Error?r.value=a.message:r.value="알 수 없는 오류가 발생했습니다.",{state:"fail",message:"인증에 실패하였습니다.",userDn:""}}},errorMessage:r,removeScriptj:f}});export{k as a,_ as u};
