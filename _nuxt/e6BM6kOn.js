import{a6 as l,q as i}from"./DSfHGzKa.js";const d=l("authStore",()=>{async function o(r){try{const e=i().public.userApiUrl;return await $fetch(`${e}/nlogin/selectMbrCi`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:{id:r}})}catch{return"error"}}async function c(r){try{const e=i().public.userApiUrl;return await $fetch(`${e}/nlogin/selectMbrCert`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:{id:r}})}catch{return"error"}}async function t(r,e,n){try{const s=i().public.userApiUrl;return await $fetch(`${s}/nlogin/saveSimpleCert`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:{userId:r,mblTelno:e,userCi:n}})}catch{return"error"}}async function a(r,e,n){try{const s=i().public.userApiUrl;return await $fetch(`${s}/nlogin/deleteCert`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:{userId:r,certstSn:e,certstDnCn:n}})}catch{return"error"}}return{deleteCert:a,selectMbrCi:o,selectMbrCert:c,saveSimpleCertData:t}});async function h(o){const c=i().public.userApiUrl,t=await fetch(`${c}/nlogin/insertAuthCenter`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(o)});if(!t.ok)throw new Error(`서버 에러: ${t.status}`);return await t.json()}export{h as i,d as u};
